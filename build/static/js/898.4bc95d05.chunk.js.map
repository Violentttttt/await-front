{"version":3,"file":"static/js/898.4bc95d05.chunk.js","mappings":"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","sources":["lazy-components/MbMatchList.jsx","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, Card, CardContent, CardMedia, Button, Grid } from \"@mui/material\";\n\nexport default function MbMatchList({ matches, handleAction }) {\n    return (\n        <Box>\n            {matches && matches.length > 0 ? (\n                matches.map((match) => (\n                    <Card \n                        key={match.maybematch.id} \n                        sx={{ \n                            display: 'flex', \n                            flexDirection: { xs: 'column', sm: 'row' }, // Вертикально на маленьких устройствах\n                            mb: 2, \n                            borderRadius: '12px', \n                            boxShadow: 3 \n                        }}\n                    >\n                        <CardMedia\n                            component=\"img\"\n                            sx={{ \n                                width: { xs: '100%', sm: 150 },  // Полная ширина на маленьких экранах\n                                height: { xs: 200, sm: 150 },    // Увеличиваем высоту на маленьких экранах\n                                objectFit: 'cover', \n                                borderRadius: { xs: '12px 12px 0 0', sm: '12px' } // Радиусы зависят от ориентации карточки\n                            }}\n                            image={match.his_picture.image ? `${process.env.REACT_APP_API_URL}${match.his_picture.image}` : `https://robohash.org/${match.search_name.name}`}\n                            alt=\"Profile\"\n                        />\n                        <Box \n                            sx={{ \n                                display: 'flex', \n                                flexDirection: 'column', \n                                p: 2, \n                                flex: 1 \n                            }}\n                        >\n                            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n                                {match.search_name.name === '' ? 'Вы искали человека' : `Вы искали: ${match.search_name.name}`}\n                            </Typography>\n                            <Typography variant=\"body1\" sx={{ fontWeight: 'bold', mb: 1 }}>\n                                Похоже, что мы его нашли... Это он?\n                            </Typography>\n                            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                                {match.is_it_him.real_name}\n                            </Typography>\n                            <Typography variant=\"body2\" sx={{ fontStyle: 'italic' }}>\n                                {match.about_him.about}\n                            </Typography>\n                        </Box>\n                        <Box \n                            sx={{ \n                                display: 'flex', \n                                flexDirection: 'column', \n                                p: 2, \n                                alignItems: 'center', \n                                justifyContent: 'center',\n                                width: { xs: '100%', sm: 'auto' }  // Полная ширина на маленьких экранах\n                            }}\n                        >\n                            <Button \n                                variant=\"contained\" \n                                color=\"primary\" \n                                sx={{ \n                                    mb: 1, \n                                    width: { xs: '100%', sm: '100%' }  // Полная ширина на маленьких устройствах\n                                }} \n                                onClick={() => handleAction('True', match.maybematch.id)}\n                            >\n                                Принять\n                            </Button>\n                            <Button \n                                variant=\"outlined\" \n                                color=\"error\" \n                                sx={{ \n                                    width: { xs: '100%', sm: '100%' }  // Полная ширина на маленьких устройствах\n                                }} \n                                onClick={() => handleAction('False', match.maybematch.id)}\n                            >\n                                Отклонить\n                            </Button>\n                        </Box>\n                    </Card>\n                ))\n            ) : (\n                <Typography variant=\"body1\" sx={{ textAlign: 'center', my: 4 }}>У Вас пока нет совпадений</Typography>\n            )}\n        </Box>\n    );\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;"],"names":["MbMatchList","_ref","matches","handleAction","_jsx","Box","children","length","map","match","_jsxs","Card","sx","display","flexDirection","xs","sm","mb","borderRadius","boxShadow","CardMedia","component","width","height","objectFit","image","his_picture","concat","process","search_name","name","alt","p","flex","Typography","variant","fontWeight","is_it_him","real_name","fontStyle","about_him","about","alignItems","justifyContent","Button","color","onClick","maybematch","id","textAlign","my","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","backgroundSize","backgroundRepeat","backgroundPosition","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useDefaultProps","className","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined"],"sourceRoot":""}